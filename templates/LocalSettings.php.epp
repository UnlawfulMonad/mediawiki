<?php
# This file was automatically generated by the MediaWiki 1.29.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $mediawiki::params::wgDisableOutputCompression = true;

$mediawiki::params::wgSitename = "<%= $mediawiki::params::site_name %>";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$mediawiki::params::wgScriptPath = "<%= $mediawiki::params::script_path %>";

## The protocol and server name to use in fully-qualified URLs
<%- if $mediawiki::params::secured { %>
$mediawiki::params::wgServer = "https://<%= $mediawiki::params::server %>";
<%- } else { %>
$mediawiki::params::wgServer = "http://<%= $mediawiki::params::server %>";
<%- } %>

## The URL path to static resources (images, scripts, etc.)
$mediawiki::params::wgResourceBasePath = $mediawiki::params::wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$mediawiki::params::wgLogo = "$mediawiki::params::wgResourceBasePath/resources/assets/wiki.png";

## UPO means: this is also a user preference option

$mediawiki::params::wgEnableEmail = <%= $mediawiki::params::enable_email %>;
$mediawiki::params::wgEnableUserEmail = <%= $mediawiki::params::enable_user_email %>; # UPO

$mediawiki::params::wgEmergencyContact = "<%= $mediawiki::params::emergency_contact %>";
$mediawiki::params::wgPasswordSender = "<%= $mediawiki::params::password_sender %>";

$mediawiki::params::wgEnotifUserTalk = false; # UPO
$mediawiki::params::wgEnotifWatchlist = false; # UPO
$mediawiki::params::wgEmailAuthentication = <%= $mediawiki::params::email_authentication %>;

## Database settings
$mediawiki::params::wgDBtype = "<%= $mediawiki::params::db_type %>";
$mediawiki::params::wgDBserver = "<%= $mediawiki::params::db_server %>";
$mediawiki::params::wgDBname     = "<%= $mediawiki::params::db_name %>";
$mediawiki::params::wgDBuser     = "<%= $mediawiki::params::db_username %>";
$mediawiki::params::wgDBpassword = "<%= $mediawiki::params::db_password %>";

# Postgres specific settings
$mediawiki::params::wgDBport = "<%= $mediawiki::params::db_port %>";
$mediawiki::params::wgDBmwschema = "<%= $mediawiki::params::db_schema %>";

## Shared memory settings
$mediawiki::params::wgMainCacheType = CACHE_NONE;
$mediawiki::params::wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$mediawiki::params::wgEnableUploads = true;
$mediawiki::params::wgUseImageMagick = <%= $mediawiki::params::enable_imagemagick %>;
$mediawiki::params::wgImageMagickConvertCommand = "<%= $mediawiki::params::imagemagick_convert_command %>";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$mediawiki::params::wgUseInstantCommons = <%= $mediawiki::params::enable_instant_commons %>;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$mediawiki::params::wgPingback = <%= $mediawiki::params::enable_telemetry %>;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$mediawiki::params::wgShellLocale = "<%= $mediawiki::params::shell_locale %>";

## Set $mediawiki::params::wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
<%- if $mediawiki::params::cache_directory != undef { %>
$mediawiki::params::wgCacheDirectory = "$IP/<%= $mediawiki::params::cache_directory %>";
<%- } %>

# Site language code, should be one of the list in ./languages/data/Names.php
$mediawiki::params::wgLanguageCode = "<%= $mediawiki::params::language %>";

# TODO CHANGE ME
$mediawiki::params::wgSecretKey = "7333edaeb51cd32a1b1caa362cdd36b2ad7d95008b0a43adda2ed893b83e64d4";

# Changing this will log out all existing sessions.
$mediawiki::params::wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$mediawiki::params::wgUpgradeKey = "7d20000e31d0653e";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$mediawiki::params::wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$mediawiki::params::wgRightsUrl = "https://www.gnu.org/copyleft/fdl.html";
$mediawiki::params::wgRightsText = "GNU Free Documentation License 1.3 or later";
$mediawiki::params::wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/gnu-fdl.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$mediawiki::params::wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$mediawiki::params::wgGroupPermissions['*']['createaccount'] = <%= $mediawiki::params::allow_account_creation %>;
$mediawiki::params::wgGroupPermissions['*']['edit'] = <%= $mediawiki::params::allow_edit %>;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$mediawiki::params::wgDefaultSkin = "<%= $mediawiki::params::default_skin %>";

# Enabled skins.
# The following skins were automatically enabled:
<%- $mediawiki::params::skins.each |$skin_name| { %>
wfLoadSkin( '<%= $skin_name %>' );
<%- } %>

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'WikiEditor' );


# End of automatically generated settings.
# Add more configuration options below.

